version: "3.8"

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    env_file:
      - ./.env  # Load environment variables from the .env file
    ports:
      - "8080:8080"
    environment:
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_NAME=${DB_NAME}
      - KAFKA_BROKER_ADDRESS=kafka:9093
      - KAFKA_TOPIC=${KAFKA_TOPIC}
      - REDIS_HOST=${REDIS_HOST}  # Add Redis hostname for app connection
      - REDIS_PORT=${REDIS_PORT}   # Default Redis port
    depends_on:
      - postgres
      - kafka
      - redis  # Add Redis as a dependency
    restart: always
    healthcheck:
      test: ["CMD", "nc", "-z", "kafka", "9093"]  # Wait for Kafka to be up
      interval: 10s
      retries: 10
      start_period: 20s
      timeout: 5s
    volumes:
      - ./.env:/app/.env  # Correct volume mount for the .env file

  postgres:
    image: postgres:15
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./schemas/PostgresDb:/docker-entrypoint-initdb.d
      - ./.env:/app/.env  # Correct volume mount for the .env file
    env_file:
      - ./.env
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "${DB_USER}", "-d", "${DB_NAME}", "-h", "localhost", "-p", "5432"]
      interval: 10s
      retries: 5
      start_period: 10s
      timeout: 5s
    restart: always

  kafka:
    image: wurstmeister/kafka:latest
    environment:
      KAFKA_ADVERTISED_LISTENER: PLAINTEXT://kafka:9093  # Use PLAINTEXT for testing
      KAFKA_LISTENERS: PLAINTEXT://kafka:9093        # Kafka listener address for internal communication
      KAFKA_LISTENER_SECURITY_PROTOCOL: PLAINTEXT        # No security protocol needed for now
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181             # Connect to the Zookeeper container
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'  # Enable auto-creation of topics
    ports:
      - "9093:9093"  # Expose port 9093 for Kafka access
    depends_on:
      - zookeeper
    restart: always
    healthcheck:
      test: ["CMD", "nc", "-z", "localhost", "9093"]  # Check if Kafka is listening
      interval: 10s
      retries: 5
      start_period: 20s
      timeout: 5s

  zookeeper:
    image: wurstmeister/zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
    ports:
      - "2181:2181"  # Expose Zookeeper client port

  redis:
    image: redis:latest
    ports:
      - "6379:6379"  # Expose Redis default port
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      retries: 5
      start_period: 10s
      timeout: 5s
    restart: always

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml  # Prometheus configuration file
    ports:
      - "9090:9090"  # Expose Prometheus UI on port 9090
    restart: always
    depends_on:
      - app
      - kafka
      - redis

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    environment:
      GF_SECURITY_ADMIN_PASSWORD: ${GF_ADMIN_PASSWORD}  # Set the Grafana admin password from env
    ports:
      - "3000:3000"  # Expose Grafana UI on port 3000
    depends_on:
      - prometheus
    restart: always

volumes:
  kafka-data:
    driver: local
  postgres-data:
    driver: local
